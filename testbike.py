# -*- coding: utf-8 -*-
"""Salinan dari Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at 
    https://colab.research.google.com/drive/1YhlVWhoB0D7WQOS86YLypkejZeH_kK9S

# Proyek Analisis Data: [Input Bike]
- **Nama:** [Josep Samuel Angelo]
- **Email:** [m009d4ky1905@bangkit.academy]
- **ID Dicoding:** [Input Username]

## Menentukan Pertanyaan Bisnis


*   ### 1. Apakah Perbedaan Musim mempengaruhi peminjaman sepeda ?
*   ### 2.Berapa jumlah pengguna sepeda casual dan register disetiap musim?

## Import Semua Packages/Library yang Digunakan
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
st.set_option('deprecation.showPyplotGlobalUse', False)



# Load and clean the day dataframe
day_df = pd.read_csv("https://raw.githubusercontent.com/josepsamuel2003/bike/21270d607ad70169420a7809d619a1759f647e0c/day.csv")
day_df.rename(columns={'yr': 'year', 'mnth': 'month', 'dteday': 'Date'}, inplace=True)
day_df['Date'] = pd.to_datetime(day_df['Date'])



# Load and clean the hour dataframe
hour_df = pd.read_csv("https://raw.githubusercontent.com/josepsamuel2003/bike/21270d607ad70169420a7809d619a1759f647e0c/hour.csv")
hour_df.rename(columns={'yr': 'year', 'mnth': 'month', 'dteday': 'Date', 'hr': 'hour'}, inplace=True)
hour_df['Date'] = pd.to_datetime(hour_df['Date'])








st.title('Analysis of Bike Rentals by Season')

# Read the hour.csv file
hour_df = pd.read_csv("https://raw.githubusercontent.com/josepsamuel2003/bike/21270d607ad70169420a7809d619a1759f647e0c/hour.csv")

# Define the season names
season_names = {1: 'Spring', 2: 'Summer', 3: 'Fall', 4: 'Winter'}

# Add a new column 'season_name' to identify the season
hour_df['season_name'] = hour_df['season'].map(season_names)

# Group by season_name and calculate total bike rentals
rentals_by_season = hour_df.groupby('season_name')['cnt'].sum()

# Define colors for the bar plot
colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728']


# Define data
x = rentals_by_season.index
y = rentals_by_season.values
colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728']

# Plot the bar chart for rentals by season
fig, ax = plt.subplots(figsize=(10, 6))
ax.bar(x, y, color=colors)
ax.set_title('Perbandingan Jumlah Peminjaman Sepeda antara Musim')
ax.set_xlabel('Musim')
ax.set_ylabel('Jumlah Peminjaman')
ax.grid(axis='y')

# Show plot in Streamlit
st.pyplot(fig)

# Display the analysis conclusion



# Calculate and visualize the number of casual and registered bike users by season
grouped_season = hour_df.groupby('season_name')
users_by_season = grouped_season[['casual', 'registered']].sum()  # Use a list instead of a tuple

# Create figure and plot
fig, ax = plt.subplots(figsize=(10, 6))
users_by_season.plot(kind='bar', ax=ax, color=['skyblue', 'orange'])
ax.set_title('Jumlah Pengguna Sepeda Casual dan Register di Setiap Musim')
ax.set_xlabel('Musim')
ax.set_ylabel('Jumlah Pengguna Sepeda')
ax.set_xticklabels(users_by_season.index, rotation=0)
ax.grid(axis='y')
ax.legend(title='Jenis Pengguna', loc='upper left')

# Show plot in Streamlit
st.pyplot(fig)

# Display the user count by season
st.write("*Number of Casual and Registered Bike Users by Season:*")
st.write(users_by_season)

#sidebar streamlit
st.sidebar.title("Contact Person:")
st.sidebar.markdown("**• Josep Samuel Angelo**")
st.sidebar.markdown(
    "**• Email: [josepsamuel2003](josepsamuel2003@gmail.com)**")
st.sidebar.markdown(
    "**• ID Dicoding: [josepsamuel2003](https://www.dicoding.com/users/josepsamuel2003/academies)**")
st.sidebar.markdown(
    "**• Github: [josepsamuel2003](https://github.com/josepsamuel2003)**")